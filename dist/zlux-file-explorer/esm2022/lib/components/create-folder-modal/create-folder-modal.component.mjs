/*
  This program and the accompanying materials are
  made available under the terms of the Eclipse Public License v2.0 which accompanies
  this distribution, and is available at https://www.eclipse.org/legal/epl-v20.html
  
  SPDX-License-Identifier: EPL-2.0
  
  Copyright Contributors to the Zowe Project.
*/
import { Component, Inject, EventEmitter } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/material/dialog";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/material/icon";
import * as i5 from "@angular/material/input";
import * as i6 from "@angular/material/button";
import * as i7 from "zlux-widgets";
export class CreateFolderModal {
    constructor(data) {
        this.folderName = "";
        this.folderPath = "";
        this.folderPathObtainedFromNode = "";
        // Block unallowed characters and "." and ".." etc
        this.folderPattern = /(([^\x00-\x1F!"$'\(\)*,\/:;<>\?\[\\\]\{\|\}\x7F\s]+)$)/;
        this.onCreate = new EventEmitter();
        const node = data.event;
        if (node.path) {
            this.folderPath = node.path;
        }
        else {
            this.folderPath = "";
        }
        this.folderPathObtainedFromNode = this.folderPath;
    }
    createFolder() {
        let onCreateResponse = new Map();
        onCreateResponse.set("pathAndName", this.folderPath + "/" + this.folderName);
        if (this.folderPath != this.folderPathObtainedFromNode) {
            //If the user changed the path obtained from the node or the node has never been opened...
            onCreateResponse.set("updateExistingTree", false); //then we can't update the tree.
        }
        else { //If the user kept the path obtained from the node...
            onCreateResponse.set("updateExistingTree", true); //then we can add that new folder into the existing node.
        }
        this.onCreate.emit(onCreateResponse); //then we can't update the tree.
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.7", ngImport: i0, type: CreateFolderModal, deps: [{ token: MAT_DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.0.7", type: CreateFolderModal, selector: "create-folder-modal", ngImport: i0, template: "<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->\n<zlux-tab-trap hiddenIds=\"createfolderclearicon1,createfolderclearicon2\" hiddenPos=\"2,4\"></zlux-tab-trap>\n<div class=\"padding-1\">\n  <div class=\"d-flex\">\n    <div class=\"modal-icon-container\">\n      <!-- FA Icon is determined by class name, so we hardcode the style here -->\n      <mat-icon style=\"font-size: 30px; position: absolute;\">create_new_folder</mat-icon>\n    </div>\n    <div>\n      <h2 mat-dialog-title class=\"modal-content-body\">Create a Directory</h2>\n    </div>\n    <!-- <i class=\"{{fileIcon}}\" style=\"font-size: 30px;position: absolute;margin-top: 2px;margin-left: 3px;color: #000000;\"></i> -->\n    <div>\n      <button mat-dialog-close class=\"close-dialog-btn\"><i class=\"fa fa-close\"></i></button>\n    </div>\n  </div>\n  <mat-dialog-content>\n    Directory name:\n    <mat-form-field style=\"margin-left: 15px;\">\n      <input id=\"create-directory-input\" name=\"name\" [pattern]=\"folderPattern\" matInput type=\"text\"\n        [(ngModel)]=\"folderName\">\n      @if (folderName) {\n      <button class=\"modal-clear-button\" mat-button matSuffix mat-icon-button tabindex=\"-1\" aria-label=\"Clear\"\n        (click)=\"folderName=''\">\n        <mat-icon class=\"create-folder-clear-icon\">close</mat-icon>\n      </button>\n      }\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-content>\n    Path:\n    <mat-form-field style=\"margin-left: 80px;\">\n      <input id=\"create-path-input\" [pattern]=\"\" matInput type=\"text\" [(ngModel)]=\"folderPath\">\n      @if (folderPath) {\n      <button class=\"modal-clear-button\" mat-button matSuffix mat-icon-button tabindex=\"-1\" aria-label=\"Clear\"\n        (click)=\"folderPath=''\">\n        <mat-icon class=\"create-folder-clear-icon\">close</mat-icon>\n      </button>\n      }\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-actions>\n    <button mat-button mat-dialog-close class=\"modal-mat-button create\" (click)=\"createFolder()\">Create</button>\n    <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\n  </mat-dialog-actions>\n</div>\n<!--\n    This program and the accompanying materials are\n    made available under the terms of the Eclipse Public License v2.0 which accompanies\n    this distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\n    SPDX-License-Identifier: EPL-2.0\n\n    Copyright Contributors to the Zowe Project.\n    -->", styles: [".create-folder-clear-icon{font-size:14px;height:5px}.mat-mdc-dialog-content{padding-top:0!important;padding-bottom:0!important}\n", "mat-dialog-actions{justify-content:flex-end}.close-dialog-btn{float:right;border:none;background:transparent;outline:none;padding:1rem}.modal-column{float:left;width:50%}.modal-column-full-width{width:100%}.modal-row:after{content:\"\";display:table;clear:both}.modal-row{padding-top:15px;font-size:medium}.modal-title{vertical-align:middle;float:left}.selectable-text{-moz-user-select:text!important;-khtml-user-select:text!important;-webkit-user-select:text!important;-ms-user-select:text!important;user-select:text!important;min-width:200px}.modal-mat-button{border-radius:3px;border:solid;color:#3f51b5;border-width:1.75px;box-shadow:transparent;background-color:transparent;font-family:Roboto,Helvetica Neue,sans-serif;font-size:14px;font-weight:500}.modal-mat-button.cancel{color:#242424;border-color:transparent;margin-right:5px}.modal-mat-button.cancel:hover{background-color:#e0e0e0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button:hover{background-color:#2c4cff1f;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button-delete{padding:6px;width:85px;border-radius:3px;border:solid;color:#e64242;border-width:1.75px;box-shadow:transparent;background-color:transparent;margin-top:25px;margin-right:-10px;font-family:Roboto,Helvetica Neue,sans-serif;font-size:14px;font-weight:500}.modal-mat-button-delete.cancel{border-color:transparent;color:#242424;margin-top:25px;margin-right:5px}.modal-mat-button-delete.cancel:hover{background-color:#e0e0e0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button-delete:hover{background-color:#fff0f0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-header{margin-left:1rem;-webkit-user-select:text;user-select:text}.modal-icon{font-size:24px;position:absolute;margin-top:4px;margin-left:3px}.modal-content-body{margin-left:45px;margin-bottom:-5px;margin-top:1px;font-size:17px;min-width:400px}.modal-clear-button{border-radius:100%;background-color:transparent;border-color:transparent}.modal-clear-button:hover{background-color:#0000001f!important;transition:0!important;-webkit-transition-duration:0!important;transition-duration:0!important}.padding-1{padding:1rem}.d-flex{display:flex}.flex-align-items-start{align-items:flex-start}.modal-icon-container{display:flex;flex-direction:column;justify-content:center}.mat-mdc-button:not(:disabled){color:none}.mat-mdc-form-field-focus-overlay,.mdc-text-field--focused{background-color:#fff!important}\n"], dependencies: [{ kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.PatternValidator, selector: "[pattern][formControlName],[pattern][formControl],[pattern][ngModel]", inputs: ["pattern"] }, { kind: "directive", type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i2.MatDialogClose, selector: "[mat-dialog-close], [matDialogClose]", inputs: ["aria-label", "type", "mat-dialog-close", "matDialogClose"], exportAs: ["matDialogClose"] }, { kind: "directive", type: i2.MatDialogTitle, selector: "[mat-dialog-title], [matDialogTitle]", inputs: ["id"], exportAs: ["matDialogTitle"] }, { kind: "directive", type: i2.MatDialogActions, selector: "[mat-dialog-actions], mat-dialog-actions, [matDialogActions]", inputs: ["align"] }, { kind: "directive", type: i2.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }, { kind: "component", type: i3.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i3.MatSuffix, selector: "[matSuffix], [matIconSuffix], [matTextSuffix]", inputs: ["matTextSuffix"] }, { kind: "component", type: i4.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: i5.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "component", type: i6.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }, { kind: "component", type: i6.MatIconButton, selector: "button[mat-icon-button]", exportAs: ["matButton"] }, { kind: "component", type: i7.ZluxTabbingComponent, selector: "zlux-tab-trap", inputs: ["hiddenIds", "hiddenPos"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.7", ngImport: i0, type: CreateFolderModal, decorators: [{
            type: Component,
            args: [{ selector: 'create-folder-modal', template: "<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->\n<zlux-tab-trap hiddenIds=\"createfolderclearicon1,createfolderclearicon2\" hiddenPos=\"2,4\"></zlux-tab-trap>\n<div class=\"padding-1\">\n  <div class=\"d-flex\">\n    <div class=\"modal-icon-container\">\n      <!-- FA Icon is determined by class name, so we hardcode the style here -->\n      <mat-icon style=\"font-size: 30px; position: absolute;\">create_new_folder</mat-icon>\n    </div>\n    <div>\n      <h2 mat-dialog-title class=\"modal-content-body\">Create a Directory</h2>\n    </div>\n    <!-- <i class=\"{{fileIcon}}\" style=\"font-size: 30px;position: absolute;margin-top: 2px;margin-left: 3px;color: #000000;\"></i> -->\n    <div>\n      <button mat-dialog-close class=\"close-dialog-btn\"><i class=\"fa fa-close\"></i></button>\n    </div>\n  </div>\n  <mat-dialog-content>\n    Directory name:\n    <mat-form-field style=\"margin-left: 15px;\">\n      <input id=\"create-directory-input\" name=\"name\" [pattern]=\"folderPattern\" matInput type=\"text\"\n        [(ngModel)]=\"folderName\">\n      @if (folderName) {\n      <button class=\"modal-clear-button\" mat-button matSuffix mat-icon-button tabindex=\"-1\" aria-label=\"Clear\"\n        (click)=\"folderName=''\">\n        <mat-icon class=\"create-folder-clear-icon\">close</mat-icon>\n      </button>\n      }\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-content>\n    Path:\n    <mat-form-field style=\"margin-left: 80px;\">\n      <input id=\"create-path-input\" [pattern]=\"\" matInput type=\"text\" [(ngModel)]=\"folderPath\">\n      @if (folderPath) {\n      <button class=\"modal-clear-button\" mat-button matSuffix mat-icon-button tabindex=\"-1\" aria-label=\"Clear\"\n        (click)=\"folderPath=''\">\n        <mat-icon class=\"create-folder-clear-icon\">close</mat-icon>\n      </button>\n      }\n    </mat-form-field>\n  </mat-dialog-content>\n\n  <mat-dialog-actions>\n    <button mat-button mat-dialog-close class=\"modal-mat-button create\" (click)=\"createFolder()\">Create</button>\n    <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\n  </mat-dialog-actions>\n</div>\n<!--\n    This program and the accompanying materials are\n    made available under the terms of the Eclipse Public License v2.0 which accompanies\n    this distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\n    SPDX-License-Identifier: EPL-2.0\n\n    Copyright Contributors to the Zowe Project.\n    -->", styles: [".create-folder-clear-icon{font-size:14px;height:5px}.mat-mdc-dialog-content{padding-top:0!important;padding-bottom:0!important}\n", "mat-dialog-actions{justify-content:flex-end}.close-dialog-btn{float:right;border:none;background:transparent;outline:none;padding:1rem}.modal-column{float:left;width:50%}.modal-column-full-width{width:100%}.modal-row:after{content:\"\";display:table;clear:both}.modal-row{padding-top:15px;font-size:medium}.modal-title{vertical-align:middle;float:left}.selectable-text{-moz-user-select:text!important;-khtml-user-select:text!important;-webkit-user-select:text!important;-ms-user-select:text!important;user-select:text!important;min-width:200px}.modal-mat-button{border-radius:3px;border:solid;color:#3f51b5;border-width:1.75px;box-shadow:transparent;background-color:transparent;font-family:Roboto,Helvetica Neue,sans-serif;font-size:14px;font-weight:500}.modal-mat-button.cancel{color:#242424;border-color:transparent;margin-right:5px}.modal-mat-button.cancel:hover{background-color:#e0e0e0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button:hover{background-color:#2c4cff1f;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button-delete{padding:6px;width:85px;border-radius:3px;border:solid;color:#e64242;border-width:1.75px;box-shadow:transparent;background-color:transparent;margin-top:25px;margin-right:-10px;font-family:Roboto,Helvetica Neue,sans-serif;font-size:14px;font-weight:500}.modal-mat-button-delete.cancel{border-color:transparent;color:#242424;margin-top:25px;margin-right:5px}.modal-mat-button-delete.cancel:hover{background-color:#e0e0e0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button-delete:hover{background-color:#fff0f0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-header{margin-left:1rem;-webkit-user-select:text;user-select:text}.modal-icon{font-size:24px;position:absolute;margin-top:4px;margin-left:3px}.modal-content-body{margin-left:45px;margin-bottom:-5px;margin-top:1px;font-size:17px;min-width:400px}.modal-clear-button{border-radius:100%;background-color:transparent;border-color:transparent}.modal-clear-button:hover{background-color:#0000001f!important;transition:0!important;-webkit-transition-duration:0!important;transition-duration:0!important}.padding-1{padding:1rem}.d-flex{display:flex}.flex-align-items-start{align-items:flex-start}.modal-icon-container{display:flex;flex-direction:column;justify-content:center}.mat-mdc-button:not(:disabled){color:none}.mat-mdc-form-field-focus-overlay,.mdc-text-field--focused{background-color:#fff!important}\n"] }]
        }], ctorParameters: () => [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }] });
//# sourceMappingURL=data:application/json;base64,