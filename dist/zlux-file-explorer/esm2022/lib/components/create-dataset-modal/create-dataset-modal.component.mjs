/*
  This program and the accompanying materials are
  made available under the terms of the Eclipse Public License v2.0 which accompanies
  this distribution, and is available at https://www.eclipse.org/legal/epl-v20.html
  
  SPDX-License-Identifier: EPL-2.0
  
  Copyright Contributors to the Zowe Project.
*/
import { Component, ViewChild, Inject } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';
import { CustomErrorStateMatcher } from '../../shared/error-state-matcher';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/material/dialog";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/material/input";
import * as i5 from "@angular/material/button";
import * as i6 from "@angular/material/select";
import * as i7 from "@angular/material/core";
import * as i8 from "zlux-widgets";
const TEMPLATE = new Map([
    ['JCL', {
            allocationUnit: 'TRK',
            primarySpace: '300',
            secondarySpace: '100',
            directoryBlocks: '20',
            recordFormat: 'FB',
            recordLength: '80',
        }],
    ['COBOL', {
            allocationUnit: 'TRK',
            primarySpace: '300',
            secondarySpace: '150',
            directoryBlocks: '20',
            recordFormat: 'FB',
            recordLength: '133',
        }],
    ['PLX', {
            allocationUnit: 'TRK',
            primarySpace: '300',
            secondarySpace: '150',
            directoryBlocks: '20',
            recordFormat: 'VBA',
            recordLength: '132',
        }],
    ['XML', {
            allocationUnit: 'TRK',
            primarySpace: '200',
            secondarySpace: '100',
            directoryBlocks: '20',
            recordFormat: 'VBA',
            recordLength: '16383',
        }],
]);
const DATASETNAMETYPE = new Map([
    ['PDS', {
            organization: 'PO',
        }],
    ['LIBRARY', {
            organization: 'PO',
        }],
    ['BASIC', {
            organization: 'PS',
        }],
    ['LARGE', {
            organization: 'PS',
        }]
]);
export class CreateDatasetModal {
    constructor(el, data) {
        this.el = el;
        this.properties = {
            template: '',
            name: '',
            allocationUnit: '',
            averageRecordUnit: '',
            primarySpace: '',
            secondarySpace: '',
            directoryBlocks: '',
            recordFormat: '',
            recordLength: '',
            blockSize: '',
            datasetNameType: '',
            organization: ''
        };
        this.matcher = new CustomErrorStateMatcher();
        this.isDirBlockValid = true;
        this.dirBlockTouched = false;
        this.isPrimeSpaceValid = true;
        this.isSecondSpaceValid = true;
        this.isRecLengthValid = true;
        this.isBlockSizeValid = true;
        this.primarySpaceError = "Primary space value cannot be more than '16777215' ";
        this.secondarySpaceError = "Secondary space value cannot be more than '16777215' ";
        this.recordLengthError = "Record length cannot be more than '32760' bytes";
        this.blockSizeError = "Block size cannot be more than '32760' bytes";
        this.isRecordFormatValid = true;
        this.blockSizeTouched = false;
        this.isAllocUnitValid = true;
        this.allocUnitErrorMessage = "If allocation unit is 'BLK' then record format must be blocked type: FB, VB, VBA";
        this.isRecFormatTouched = false;
        if (data && data.data) {
            this.properties.name = data.data.dsName;
            this.properties.datasetNameType = data.data.dsNameType;
            this.properties.organization = data.data.dsOrg;
        }
        else {
            this.properties.datasetNameType = 'PDS';
            this.properties.organization = 'PO';
        }
        this.numericPattern = "^[0-9]*$";
        this.numericPatternExZero = "^[1-9][0-9]*$";
        this.datasetNamePattern = "^[a-zA-Z#$@][a-zA-Z0-9#$@-]{0,7}([.][a-zA-Z#$@][a-zA-Z0-9#$@-]{0,7}){0,21}$";
        this.alphaNumericPattern = "^[a-zA-Z0-9]*$";
        this.templateOptions = ['JCL', 'COBOL', 'PLX', 'XML'];
        this.allocationUnitOptions = ['BLK', 'TRK', 'CYL', 'KB', 'MB', 'BYTE', 'RECORD'];
        this.recordFormatOptions = ['F', 'FB', 'V', 'VB', 'VBA', 'U'];
        this.datasetNameTypeOptions = ['PDS', 'LIBRARY', 'BASIC', 'LARGE'];
        this.organizationOptions = ['PS', 'PO'];
        this.recordUnitOptions = ['U', 'K', 'M',];
        this.properties.template = '';
        this.properties.averageRecordUnit = '';
    }
    onTemplateChange(value) {
        this.setTemplateProperties(value);
    }
    setDatasetNameTypeProperties(datasetNameType) {
        this.dsorg.nativeElement.setAttribute('style', 'padding-bottom: 4px; margin-bottom: -7px; border-bottom: 2px solid #000099');
        setTimeout(() => {
            this.dsorg.nativeElement.setAttribute('style', 'margin-bottom: 0px; border-bottom: 0px');
        }, 3000);
        if (!datasetNameType) {
            this.properties.organization = 'PS';
        }
        else {
            this.properties.organization = DATASETNAMETYPE.get(datasetNameType)?.organization;
        }
        if (this.dirBlockTouched) {
            this.checkForValidDirBlockCombination();
        }
    }
    setTemplateProperties(template) {
        this.dirblocks.nativeElement.setAttribute('style', 'margin-bottom: -7px; border-bottom: 2px solid #000099');
        this.allocUnit._elementRef.nativeElement.setAttribute('style', 'padding-bottom: 5px; margin-bottom: -7px; border-bottom: 2px solid #000099');
        this.primeSpace.nativeElement.setAttribute('style', 'margin-bottom: -6px; border-bottom: 2px solid #000099');
        this.secondSpace.nativeElement.setAttribute('style', 'margin-bottom: -7px; border-bottom: 2px solid #000099');
        this.recordLength.nativeElement.setAttribute('style', 'margin-bottom: -6px; border-bottom: 2px solid #000099');
        this.recordFormat._elementRef.nativeElement.setAttribute('style', 'padding-bottom: 5px; margin-bottom: -6px; border-bottom: 2px solid #000099');
        setTimeout(() => {
            this.dirblocks.nativeElement.setAttribute('style', 'margin-bottom: 0px; border-bottom: 0px');
            this.allocUnit._elementRef.nativeElement.setAttribute('style', 'padding-bottom: 0px; margin-bottom: 0px; border-bottom: 0px');
            this.primeSpace.nativeElement.setAttribute('style', 'margin-bottom: 0px; border-bottom: 0px');
            this.secondSpace.nativeElement.setAttribute('style', 'margin-bottom: 0px; border-bottom: 0px');
            this.recordLength.nativeElement.setAttribute('style', 'margin-bottom: 0px; border-bottom: 0px');
            this.recordFormat._elementRef.nativeElement.setAttribute('style', 'padding-bottom: 0px; margin-bottom: 0px; border-bottom: 0px');
        }, 3000);
        this.dirBlockTouched = true;
        if (!template) {
            this.properties.allocationUnit = '';
            this.properties.primarySpace = '';
            this.properties.secondarySpace = '';
            this.properties.directoryBlocks = '';
            this.properties.recordFormat = '';
            this.properties.recordLength = '';
        }
        this.properties.allocationUnit = TEMPLATE?.get(template)?.allocationUnit;
        this.properties.primarySpace = TEMPLATE.get(template).primarySpace;
        this.properties.secondarySpace = TEMPLATE.get(template).secondarySpace;
        if (this.properties.organization == 'PS') {
            this.properties.directoryBlocks = '0';
        }
        else {
            this.properties.directoryBlocks = TEMPLATE.get(template).directoryBlocks;
        }
        this.isDirBlockValid = true;
        this.properties.recordFormat = TEMPLATE.get(template).recordFormat;
        this.properties.recordLength = TEMPLATE.get(template).recordLength;
        this.checkForValidDirBlockCombination();
        if (this.blockSizeTouched) {
            this.checkForValidRecordFormatCombination();
        }
    }
    onDirBlockChange(value) {
        this.dirBlockTouched = true;
        if (parseInt(this.properties.directoryBlocks) > 16777215) {
            this.isDirBlockValid = false;
            this.dirBlockError = 'Directory blocks cannot be more than 16777215';
        }
        else {
            this.checkForValidDirBlockCombination();
        }
    }
    checkForValidDirBlockCombination() {
        if (this.properties.organization == 'PS') {
            if (this.properties.directoryBlocks == '') {
                this.isDirBlockValid = true;
            }
            else if (parseInt(this.properties.directoryBlocks) > 0) {
                this.isDirBlockValid = false;
                this.dirBlockError = 'Directory blocks must be 0 for the sequential dataset';
            }
            else {
                this.isDirBlockValid = true;
            }
        }
        if (this.properties.organization == 'PO') {
            if (this.properties.directoryBlocks == '') {
                this.isDirBlockValid = true;
            }
            else if (parseInt(this.properties.directoryBlocks) < 1) {
                this.isDirBlockValid = false;
                this.dirBlockError = 'Directory blocks must be greater than 0 for the partitioned dataset';
            }
            else {
                this.isDirBlockValid = true;
            }
        }
    }
    checkForValidRecordFormatCombination() {
        if (this.properties.recordFormat == 'F') {
            if (this.properties.blockSize !== '' && this.properties.recordLength !== this.properties.blockSize) {
                this.isRecordFormatValid = false;
                this.recordFormatErrorMessage = 'Block size must be equal to the record length for fixed record format';
            }
            else {
                this.isRecordFormatValid = true;
            }
        }
        if (this.properties.recordFormat == 'FB') {
            if (this.properties.blockSize !== '' && (parseInt(this.properties.blockSize) % parseInt(this.properties.recordLength)) != 0) {
                this.isRecordFormatValid = false;
                this.recordFormatErrorMessage = 'Block size must be a multiple of the record length for fixed blocked record format';
            }
            else {
                this.isRecordFormatValid = true;
            }
        }
        if (this.properties.recordFormat == 'V' || this.properties.recordFormat == 'VB') {
            if (this.properties.blockSize !== '' && parseInt(this.properties.blockSize) < (parseInt(this.properties.recordLength) + 4)) {
                this.isRecordFormatValid = false;
                this.recordFormatErrorMessage = 'Block size must be atleast 4 more than the record length for V, VB, VBA record format';
            }
            else {
                this.isRecordFormatValid = true;
            }
        }
        if (this.properties.recordFormat == 'VBA') {
            if (parseInt(this.properties.recordLength) < 5) {
                this.isRecordFormatValid = false;
                this.recordFormatErrorMessage = 'Record length must be atleast 5 for VBA record format';
            }
            else if (this.properties.blockSize !== '' && parseInt(this.properties.blockSize) < (parseInt(this.properties.recordLength) + 4)) {
                this.isRecordFormatValid = false;
                this.recordFormatErrorMessage = 'Block size must be atleast 4 more than the record length for V, VB, VBA record format';
            }
            else {
                this.isRecordFormatValid = true;
            }
        }
        if (this.properties.recordFormat == 'U') {
            if (parseInt(this.properties.recordLength) > 0) {
                this.isRecordFormatValid = false;
                this.recordFormatErrorMessage = 'Record length must be equal to 0 for undefined record format';
            }
            else {
                this.isRecordFormatValid = true;
            }
        }
    }
    checkForValidAllocUnitCombination() {
        if (this.properties.allocationUnit == 'BLK') {
            if (this.properties.recordFormat !== 'FB' && this.properties.recordFormat !== 'VB' && this.properties.recordFormat !== 'VBA') {
                this.isAllocUnitValid = false;
            }
            else {
                this.isAllocUnitValid = true;
            }
        }
        else {
            this.isAllocUnitValid = true;
        }
    }
    onPrimeSpaceChange(primarySpace) {
        if (parseInt(primarySpace) > 16777215) {
            this.isPrimeSpaceValid = false;
        }
        else {
            this.isPrimeSpaceValid = true;
        }
    }
    onSecondSpaceChange(SecondarySpace) {
        if (parseInt(SecondarySpace) > 16777215) {
            this.isSecondSpaceValid = false;
        }
        else {
            this.isSecondSpaceValid = true;
        }
    }
    onRecLengthChange(recordLength) {
        if (parseInt(recordLength) > 32760) {
            this.isRecLengthValid = false;
        }
        else {
            this.isRecLengthValid = true;
        }
        if (this.blockSizeTouched || this.properties.recordFormat == 'U' || this.properties.recordFormat == 'VBA') {
            this.checkForValidRecordFormatCombination();
        }
    }
    onBlockSizeChange(blockSize) {
        this.blockSizeTouched = true;
        if (parseInt(blockSize) > 32760) {
            this.isBlockSizeValid = false;
        }
        else {
            this.isBlockSizeValid = true;
        }
        this.checkForValidRecordFormatCombination();
    }
    onRecordFormatChange(value) {
        this.isRecFormatTouched = true;
        if (this.blockSizeTouched || this.properties.recordFormat == 'U') {
            this.checkForValidRecordFormatCombination();
        }
        this.checkForValidAllocUnitCombination();
    }
    onAllocUnitChange(value) {
        if (this.isRecFormatTouched) {
            this.checkForValidAllocUnitCombination();
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.7", ngImport: i0, type: CreateDatasetModal, deps: [{ token: i0.ElementRef }, { token: MAT_DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.0.7", type: CreateDatasetModal, selector: "create-dataset-modal", viewQueries: [{ propertyName: "dirblocks", first: true, predicate: ["dirblocks"], descendants: true }, { propertyName: "primeSpace", first: true, predicate: ["primeSpace"], descendants: true }, { propertyName: "allocUnit", first: true, predicate: ["allocUnit"], descendants: true }, { propertyName: "secondSpace", first: true, predicate: ["secondSpace"], descendants: true }, { propertyName: "recordLength", first: true, predicate: ["recordLength"], descendants: true }, { propertyName: "recordFormat", first: true, predicate: ["recordFormat"], descendants: true }, { propertyName: "dsorg", first: true, predicate: ["dsorg"], descendants: true }], ngImport: i0, template: "<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->\n<zlux-tab-trap></zlux-tab-trap>\n<button mat-dialog-close class=\"close-dialog-btn\"><i class=\"fa fa-close\"></i></button>\n<h2 mat-dialog-title>ALLOCATE NEW DATA SET</h2>\n<p class=\"mandatory\">Mandatory fields are marked with an asterisk</p>\n<mat-dialog-content>\n  <label class=\"required\" style=\"margin-left: 6px\">Data Set Name:</label>\n  <mat-form-field floatLabel=\"auto\" [style.width.px]=300>\n    <input matInput type=\"text\" maxlength=\"44\" placeholder=\"High-level qualifier must start with a TSO ID\"\n      [pattern]=\"datasetNamePattern\" [(ngModel)]=\"properties.name\" #nameInput=\"ngModel\" [errorStateMatcher]=\"matcher\"\n      oninput=\"this.value = this.value.toUpperCase()\">\n    <mat-error>Invalid Name</mat-error>\n  </mat-form-field>\n  <div class=\"row\">\n    <div class=\"column1\">\n      <label class=\"required\">Data Set Name Type:</label>\n      <mat-form-field floatLabel=\"auto\">\n        <mat-select class=\"select-encoding\" tabindex=\"0\" placeholder=\"Blank for PS Dataset\"\n          [(ngModel)]=\"properties.datasetNameType\" #datasetNameType\n          (selectionChange)=\"setDatasetNameTypeProperties(datasetNameType.value)\">\n          <mat-option>Blank</mat-option>\n          @for (datasetNameType of datasetNameTypeOptions; track datasetNameType) {\n          <mat-option [value]=\"datasetNameType\">\n            {{datasetNameType}}</mat-option>\n          }\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"column2\">\n      <label>Data Set Organization:</label>\n      <mat-form-field>\n        <input matInput [(ngModel)]=\"properties.organization\" readonly #dsorg>\n      </mat-form-field>\n    </div>\n  </div>\n  <p></p>\n  <label style=\"margin-left: 310px; width: 148px; font-size: larger; font-weight: bold;\">TEMPLATE:</label>\n  <mat-form-field style=\"width: 150px; font-weight: bold; margin-top: 3px;\" floatLabel=\"auto\">\n    <mat-select class=\"select-encoding\" tabindex=\"0\" placeholder=\"Select\" [(ngModel)]=\"properties.template\"\n      #templateInput (selectionChange)=\"onTemplateChange(templateInput.value)\">\n      <mat-option>None</mat-option>\n      @for (template of templateOptions; track template) {\n      <mat-option [value]=\"template\">\n        {{template}}</mat-option>\n      }\n    </mat-select>\n  </mat-form-field>\n  <div class=\"row\">\n    <div class=\"column1\">\n      <label class=\"required\">Allocation Unit:</label>\n      <mat-form-field floatLabel=\"auto\">\n        <mat-select class=\"select-encoding\" tabindex=\"0\" placeholder=\"Select\" [(ngModel)]=\"properties.allocationUnit\"\n          #allocUnit (selectionChange)=\"onAllocUnitChange(allocUnit.value)\">\n          @for (allocationUnit of allocationUnitOptions; track allocationUnit) {\n          <mat-option [value]=\"allocationUnit\">\n            {{allocationUnit}}</mat-option>\n          }\n        </mat-select>\n      </mat-form-field>\n      <label class=\"required\">Primary Space:</label>\n      <mat-form-field>\n        <input matInput [pattern]=\"numericPatternExZero\" [(ngModel)]=\"properties.primarySpace\"\n          #primarySpaceInput=\"ngModel\" [errorStateMatcher]=\"matcher\"\n          (ngModelChange)=\"onPrimeSpaceChange(primarySpaceInput.value)\" #primeSpace>\n        <mat-error>Invalid Primary Space</mat-error>\n      </mat-form-field>\n      <label class=\"required\">Record Length:</label>\n      <mat-form-field>\n        <input matInput [pattern]=\"numericPattern\" [(ngModel)]=\"properties.recordLength\" #recLengthInput=\"ngModel\"\n          [errorStateMatcher]=\"matcher\" (ngModelChange)=\"onRecLengthChange(recLengthInput.value)\" #recordLength>\n        <mat-error>Invalid Record Length</mat-error>\n      </mat-form-field>\n      <label class=\"required\">Directory Blocks:</label>\n      <mat-form-field floatLabel=\"auto\">\n        <input matInput [pattern]=\"numericPattern\" placeholder=\"0 for PS Data Set\"\n          [(ngModel)]=\"properties.directoryBlocks\" #dirBlockInput=\"ngModel\" [errorStateMatcher]=\"matcher\"\n          (ngModelChange)=\"onDirBlockChange(dirBlockInput.value)\" #dirblocks>\n        <mat-error>Invalid Directory Blocks</mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"column2\">\n      <label>Average Record Unit:</label>\n      <mat-form-field floatLabel=\"auto\">\n        <mat-select class=\"select-encoding\" tabindex=\"0\" placeholder=\"Select\"\n          [(ngModel)]=\"properties.averageRecordUnit\">\n          @for (averageRecordUnit of recordUnitOptions; track averageRecordUnit) {\n          <mat-option [value]=\"averageRecordUnit\">\n            {{averageRecordUnit}}</mat-option>\n          }\n        </mat-select>\n      </mat-form-field>\n      <label class=\"required\">Secondary Space:</label>\n      <mat-form-field>\n        <input matInput [pattern]=\"numericPatternExZero\" [(ngModel)]=\"properties.secondarySpace\"\n          #secSpaceInput=\"ngModel\" [errorStateMatcher]=\"matcher\"\n          (ngModelChange)=\"onSecondSpaceChange(secSpaceInput.value)\" #secondSpace>\n        <mat-error>Invalid Secondary Space</mat-error>\n      </mat-form-field>\n      <label class=\"required\">Record Format:</label>\n      <mat-form-field floatLabel=\"auto\">\n        <mat-select class=\"select-encoding\" tabindex=\"0\" placeholder=\"Select\" [(ngModel)]=\"properties.recordFormat\"\n          #recordFormat (selectionChange)=\"onRecordFormatChange(recordFormat.value)\">\n          @for (recordFormat of recordFormatOptions; track recordFormat) {\n          <mat-option [value]=\"recordFormat\">\n            {{recordFormat}}</mat-option>\n          }\n        </mat-select>\n      </mat-form-field>\n      <label>Block Size :</label>\n      <mat-form-field>\n        <input matInput [pattern]=\"numericPatternExZero\" [(ngModel)]=\"properties.blockSize\" #blockSize=\"ngModel\"\n          [errorStateMatcher]=\"matcher\" (ngModelChange)=\"onBlockSizeChange(blockSize.value)\">\n        <mat-error>Invalid Block Size</mat-error>\n      </mat-form-field>\n    </div>\n  </div>\n</mat-dialog-content>\n<div [hidden]=\"isDirBlockValid\" class=\"errorClass\">{{dirBlockError}}</div>\n<div [hidden]=\"isPrimeSpaceValid\" class=\"errorClass\">{{primarySpaceError}}</div>\n<div [hidden]=\"isSecondSpaceValid\" class=\"errorClass\">{{secondarySpaceError}}</div>\n<div [hidden]=\"isRecLengthValid\" class=\"errorClass\">{{recordLengthError}}</div>\n<div [hidden]=\"isBlockSizeValid\" class=\"errorClass\">{{blockSizeError}}</div>\n<div [hidden]=\"isRecordFormatValid\" class=\"errorClass\">{{recordFormatErrorMessage}}</div>\n<div [hidden]=\"isAllocUnitValid\" class=\"errorClass\">{{allocUnitErrorMessage}}</div>\n<mat-dialog-actions>\n  <button mat-button mat-stroked-button class=\"right\" color=\"primary\" [mat-dialog-close]=\"properties\"\n    [disabled]=\"!properties.name || !properties.allocationUnit || !properties.primarySpace || !properties.secondarySpace || !properties.directoryBlocks || !properties.recordFormat || !properties.recordLength || nameInput.invalid || primarySpaceInput.invalid || secSpaceInput.invalid || dirBlockInput.invalid || recLengthInput.invalid || blockSize.invalid || !isDirBlockValid || !isPrimeSpaceValid || !isSecondSpaceValid || !isRecLengthValid || !isBlockSizeValid || !isRecordFormatValid || !isAllocUnitValid\">\n    Save\n  </button>\n</mat-dialog-actions>\n\n<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->", styles: [".mat-dialog-title{font:500 20px/32px Roboto,Helvetica Neue,sans-serif;text-align:center;border-bottom:2px solid;width:fit-content;margin-left:330px}.mat-dialog-container{width:1000px!important}.row:after{content:\"\";display:table;clear:both}.column1{float:left;margin-left:12px;width:45%;padding:10px}.column2{float:right;margin-left:30px;width:45%;padding:10px}.mat-dialog-content{box-sizing:border-box;padding:5px 0 5px 35px;width:940px;overflow:hidden}.mat-dialog-content label{float:left;width:200px;padding-top:20px;font-weight:500}.mat-form-field{font-size:inherit;font-weight:400;line-height:1.125;font-family:Roboto,Helvetica Neue,sans-serif;width:200px}.mat-select{font-family:Roboto,Helvetica Neue,sans-serif}.mat-option{background:#fff}.mat-option.mat-active{background:#dad9d9!important}.mat-option:hover{background:#efeeee}::ng-deep .mat-select-panel{box-shadow:0 0 5px 1px gray;margin-top:10px}.mat-dialog-actions{justify-content:flex-end}.required:before{content:\"* \";color:#000}.mandatory{font-style:Roboto,\"Helvetica Neue\",sans-serif;text-align:left;margin-left:20px}.errorClass{margin-left:20px;color:red;position:relative}\n", "mat-dialog-actions{justify-content:flex-end}.close-dialog-btn{float:right;border:none;background:transparent;outline:none}.modal-column{float:left;width:50%}.modal-column-full-width{width:100%}.modal-row:after{content:\"\";display:table;clear:both}.modal-row{padding-top:15px;font-size:medium}.modal-title{vertical-align:middle;float:left}.selectable-text{-moz-user-select:text!important;-khtml-user-select:text!important;-webkit-user-select:text!important;-ms-user-select:text!important;user-select:text!important;min-width:200px}.modal-mat-button{padding:6px;width:85px;border-radius:3px;border:solid;color:#3f51b5;border-width:1.75px;box-shadow:transparent;background-color:transparent;margin-top:25px;margin-right:-10px;font-family:Roboto,Helvetica Neue,sans-serif;font-size:14px;font-weight:500}.modal-mat-button.cancel{color:#242424;border-color:transparent;margin-right:5px}.modal-mat-button.cancel:hover{background-color:#e0e0e0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button:hover{background-color:#2c4cff1f;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button-delete{padding:6px;width:85px;border-radius:3px;border:solid;color:#e64242;border-width:1.75px;box-shadow:transparent;background-color:transparent;margin-top:25px;margin-right:-10px;font-family:Roboto,Helvetica Neue,sans-serif;font-size:14px;font-weight:500}.modal-mat-button-delete.cancel{border-color:transparent;color:#242424;margin-top:25px;margin-right:5px}.modal-mat-button-delete.cancel:hover{background-color:#e0e0e0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button-delete:hover{background-color:#fff0f0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-header{margin-left:33px;margin-bottom:15px;-webkit-user-select:text;user-select:text}.modal-icon{font-size:24px;position:absolute;margin-top:4px;margin-left:3px}.modal-content-body{margin-left:45px;margin-bottom:-5px;margin-top:1px;font-size:17px;min-width:400px}.modal-clear-button{border-radius:100%;background-color:transparent;border-color:transparent}.modal-clear-button:hover{background-color:#0000001f!important;transition:0!important;-webkit-transition-duration:0!important;transition-duration:0!important}\n"], dependencies: [{ kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { kind: "directive", type: i1.PatternValidator, selector: "[pattern][formControlName],[pattern][formControl],[pattern][ngModel]", inputs: ["pattern"] }, { kind: "directive", type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i2.MatDialogClose, selector: "[mat-dialog-close], [matDialogClose]", inputs: ["aria-label", "type", "mat-dialog-close", "matDialogClose"], exportAs: ["matDialogClose"] }, { kind: "directive", type: i2.MatDialogTitle, selector: "[mat-dialog-title], [matDialogTitle]", inputs: ["id"], exportAs: ["matDialogTitle"] }, { kind: "directive", type: i2.MatDialogActions, selector: "[mat-dialog-actions], mat-dialog-actions, [matDialogActions]", inputs: ["align"] }, { kind: "directive", type: i2.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }, { kind: "component", type: i3.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i3.MatError, selector: "mat-error, [matError]", inputs: ["id"] }, { kind: "directive", type: i4.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "component", type: i5.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }, { kind: "component", type: i6.MatSelect, selector: "mat-select", inputs: ["aria-describedby", "panelClass", "disabled", "disableRipple", "tabIndex", "hideSingleSelectionIndicator", "placeholder", "required", "multiple", "disableOptionCentering", "compareWith", "value", "aria-label", "aria-labelledby", "errorStateMatcher", "typeaheadDebounceInterval", "sortComparator", "id", "panelWidth"], outputs: ["openedChange", "opened", "closed", "selectionChange", "valueChange"], exportAs: ["matSelect"] }, { kind: "component", type: i7.MatOption, selector: "mat-option", inputs: ["value", "id", "disabled"], outputs: ["onSelectionChange"], exportAs: ["matOption"] }, { kind: "component", type: i8.ZluxTabbingComponent, selector: "zlux-tab-trap", inputs: ["hiddenIds", "hiddenPos"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.7", ngImport: i0, type: CreateDatasetModal, decorators: [{
            type: Component,
            args: [{ selector: 'create-dataset-modal', template: "<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->\n<zlux-tab-trap></zlux-tab-trap>\n<button mat-dialog-close class=\"close-dialog-btn\"><i class=\"fa fa-close\"></i></button>\n<h2 mat-dialog-title>ALLOCATE NEW DATA SET</h2>\n<p class=\"mandatory\">Mandatory fields are marked with an asterisk</p>\n<mat-dialog-content>\n  <label class=\"required\" style=\"margin-left: 6px\">Data Set Name:</label>\n  <mat-form-field floatLabel=\"auto\" [style.width.px]=300>\n    <input matInput type=\"text\" maxlength=\"44\" placeholder=\"High-level qualifier must start with a TSO ID\"\n      [pattern]=\"datasetNamePattern\" [(ngModel)]=\"properties.name\" #nameInput=\"ngModel\" [errorStateMatcher]=\"matcher\"\n      oninput=\"this.value = this.value.toUpperCase()\">\n    <mat-error>Invalid Name</mat-error>\n  </mat-form-field>\n  <div class=\"row\">\n    <div class=\"column1\">\n      <label class=\"required\">Data Set Name Type:</label>\n      <mat-form-field floatLabel=\"auto\">\n        <mat-select class=\"select-encoding\" tabindex=\"0\" placeholder=\"Blank for PS Dataset\"\n          [(ngModel)]=\"properties.datasetNameType\" #datasetNameType\n          (selectionChange)=\"setDatasetNameTypeProperties(datasetNameType.value)\">\n          <mat-option>Blank</mat-option>\n          @for (datasetNameType of datasetNameTypeOptions; track datasetNameType) {\n          <mat-option [value]=\"datasetNameType\">\n            {{datasetNameType}}</mat-option>\n          }\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"column2\">\n      <label>Data Set Organization:</label>\n      <mat-form-field>\n        <input matInput [(ngModel)]=\"properties.organization\" readonly #dsorg>\n      </mat-form-field>\n    </div>\n  </div>\n  <p></p>\n  <label style=\"margin-left: 310px; width: 148px; font-size: larger; font-weight: bold;\">TEMPLATE:</label>\n  <mat-form-field style=\"width: 150px; font-weight: bold; margin-top: 3px;\" floatLabel=\"auto\">\n    <mat-select class=\"select-encoding\" tabindex=\"0\" placeholder=\"Select\" [(ngModel)]=\"properties.template\"\n      #templateInput (selectionChange)=\"onTemplateChange(templateInput.value)\">\n      <mat-option>None</mat-option>\n      @for (template of templateOptions; track template) {\n      <mat-option [value]=\"template\">\n        {{template}}</mat-option>\n      }\n    </mat-select>\n  </mat-form-field>\n  <div class=\"row\">\n    <div class=\"column1\">\n      <label class=\"required\">Allocation Unit:</label>\n      <mat-form-field floatLabel=\"auto\">\n        <mat-select class=\"select-encoding\" tabindex=\"0\" placeholder=\"Select\" [(ngModel)]=\"properties.allocationUnit\"\n          #allocUnit (selectionChange)=\"onAllocUnitChange(allocUnit.value)\">\n          @for (allocationUnit of allocationUnitOptions; track allocationUnit) {\n          <mat-option [value]=\"allocationUnit\">\n            {{allocationUnit}}</mat-option>\n          }\n        </mat-select>\n      </mat-form-field>\n      <label class=\"required\">Primary Space:</label>\n      <mat-form-field>\n        <input matInput [pattern]=\"numericPatternExZero\" [(ngModel)]=\"properties.primarySpace\"\n          #primarySpaceInput=\"ngModel\" [errorStateMatcher]=\"matcher\"\n          (ngModelChange)=\"onPrimeSpaceChange(primarySpaceInput.value)\" #primeSpace>\n        <mat-error>Invalid Primary Space</mat-error>\n      </mat-form-field>\n      <label class=\"required\">Record Length:</label>\n      <mat-form-field>\n        <input matInput [pattern]=\"numericPattern\" [(ngModel)]=\"properties.recordLength\" #recLengthInput=\"ngModel\"\n          [errorStateMatcher]=\"matcher\" (ngModelChange)=\"onRecLengthChange(recLengthInput.value)\" #recordLength>\n        <mat-error>Invalid Record Length</mat-error>\n      </mat-form-field>\n      <label class=\"required\">Directory Blocks:</label>\n      <mat-form-field floatLabel=\"auto\">\n        <input matInput [pattern]=\"numericPattern\" placeholder=\"0 for PS Data Set\"\n          [(ngModel)]=\"properties.directoryBlocks\" #dirBlockInput=\"ngModel\" [errorStateMatcher]=\"matcher\"\n          (ngModelChange)=\"onDirBlockChange(dirBlockInput.value)\" #dirblocks>\n        <mat-error>Invalid Directory Blocks</mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"column2\">\n      <label>Average Record Unit:</label>\n      <mat-form-field floatLabel=\"auto\">\n        <mat-select class=\"select-encoding\" tabindex=\"0\" placeholder=\"Select\"\n          [(ngModel)]=\"properties.averageRecordUnit\">\n          @for (averageRecordUnit of recordUnitOptions; track averageRecordUnit) {\n          <mat-option [value]=\"averageRecordUnit\">\n            {{averageRecordUnit}}</mat-option>\n          }\n        </mat-select>\n      </mat-form-field>\n      <label class=\"required\">Secondary Space:</label>\n      <mat-form-field>\n        <input matInput [pattern]=\"numericPatternExZero\" [(ngModel)]=\"properties.secondarySpace\"\n          #secSpaceInput=\"ngModel\" [errorStateMatcher]=\"matcher\"\n          (ngModelChange)=\"onSecondSpaceChange(secSpaceInput.value)\" #secondSpace>\n        <mat-error>Invalid Secondary Space</mat-error>\n      </mat-form-field>\n      <label class=\"required\">Record Format:</label>\n      <mat-form-field floatLabel=\"auto\">\n        <mat-select class=\"select-encoding\" tabindex=\"0\" placeholder=\"Select\" [(ngModel)]=\"properties.recordFormat\"\n          #recordFormat (selectionChange)=\"onRecordFormatChange(recordFormat.value)\">\n          @for (recordFormat of recordFormatOptions; track recordFormat) {\n          <mat-option [value]=\"recordFormat\">\n            {{recordFormat}}</mat-option>\n          }\n        </mat-select>\n      </mat-form-field>\n      <label>Block Size :</label>\n      <mat-form-field>\n        <input matInput [pattern]=\"numericPatternExZero\" [(ngModel)]=\"properties.blockSize\" #blockSize=\"ngModel\"\n          [errorStateMatcher]=\"matcher\" (ngModelChange)=\"onBlockSizeChange(blockSize.value)\">\n        <mat-error>Invalid Block Size</mat-error>\n      </mat-form-field>\n    </div>\n  </div>\n</mat-dialog-content>\n<div [hidden]=\"isDirBlockValid\" class=\"errorClass\">{{dirBlockError}}</div>\n<div [hidden]=\"isPrimeSpaceValid\" class=\"errorClass\">{{primarySpaceError}}</div>\n<div [hidden]=\"isSecondSpaceValid\" class=\"errorClass\">{{secondarySpaceError}}</div>\n<div [hidden]=\"isRecLengthValid\" class=\"errorClass\">{{recordLengthError}}</div>\n<div [hidden]=\"isBlockSizeValid\" class=\"errorClass\">{{blockSizeError}}</div>\n<div [hidden]=\"isRecordFormatValid\" class=\"errorClass\">{{recordFormatErrorMessage}}</div>\n<div [hidden]=\"isAllocUnitValid\" class=\"errorClass\">{{allocUnitErrorMessage}}</div>\n<mat-dialog-actions>\n  <button mat-button mat-stroked-button class=\"right\" color=\"primary\" [mat-dialog-close]=\"properties\"\n    [disabled]=\"!properties.name || !properties.allocationUnit || !properties.primarySpace || !properties.secondarySpace || !properties.directoryBlocks || !properties.recordFormat || !properties.recordLength || nameInput.invalid || primarySpaceInput.invalid || secSpaceInput.invalid || dirBlockInput.invalid || recLengthInput.invalid || blockSize.invalid || !isDirBlockValid || !isPrimeSpaceValid || !isSecondSpaceValid || !isRecLengthValid || !isBlockSizeValid || !isRecordFormatValid || !isAllocUnitValid\">\n    Save\n  </button>\n</mat-dialog-actions>\n\n<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->", styles: [".mat-dialog-title{font:500 20px/32px Roboto,Helvetica Neue,sans-serif;text-align:center;border-bottom:2px solid;width:fit-content;margin-left:330px}.mat-dialog-container{width:1000px!important}.row:after{content:\"\";display:table;clear:both}.column1{float:left;margin-left:12px;width:45%;padding:10px}.column2{float:right;margin-left:30px;width:45%;padding:10px}.mat-dialog-content{box-sizing:border-box;padding:5px 0 5px 35px;width:940px;overflow:hidden}.mat-dialog-content label{float:left;width:200px;padding-top:20px;font-weight:500}.mat-form-field{font-size:inherit;font-weight:400;line-height:1.125;font-family:Roboto,Helvetica Neue,sans-serif;width:200px}.mat-select{font-family:Roboto,Helvetica Neue,sans-serif}.mat-option{background:#fff}.mat-option.mat-active{background:#dad9d9!important}.mat-option:hover{background:#efeeee}::ng-deep .mat-select-panel{box-shadow:0 0 5px 1px gray;margin-top:10px}.mat-dialog-actions{justify-content:flex-end}.required:before{content:\"* \";color:#000}.mandatory{font-style:Roboto,\"Helvetica Neue\",sans-serif;text-align:left;margin-left:20px}.errorClass{margin-left:20px;color:red;position:relative}\n", "mat-dialog-actions{justify-content:flex-end}.close-dialog-btn{float:right;border:none;background:transparent;outline:none}.modal-column{float:left;width:50%}.modal-column-full-width{width:100%}.modal-row:after{content:\"\";display:table;clear:both}.modal-row{padding-top:15px;font-size:medium}.modal-title{vertical-align:middle;float:left}.selectable-text{-moz-user-select:text!important;-khtml-user-select:text!important;-webkit-user-select:text!important;-ms-user-select:text!important;user-select:text!important;min-width:200px}.modal-mat-button{padding:6px;width:85px;border-radius:3px;border:solid;color:#3f51b5;border-width:1.75px;box-shadow:transparent;background-color:transparent;margin-top:25px;margin-right:-10px;font-family:Roboto,Helvetica Neue,sans-serif;font-size:14px;font-weight:500}.modal-mat-button.cancel{color:#242424;border-color:transparent;margin-right:5px}.modal-mat-button.cancel:hover{background-color:#e0e0e0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button:hover{background-color:#2c4cff1f;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button-delete{padding:6px;width:85px;border-radius:3px;border:solid;color:#e64242;border-width:1.75px;box-shadow:transparent;background-color:transparent;margin-top:25px;margin-right:-10px;font-family:Roboto,Helvetica Neue,sans-serif;font-size:14px;font-weight:500}.modal-mat-button-delete.cancel{border-color:transparent;color:#242424;margin-top:25px;margin-right:5px}.modal-mat-button-delete.cancel:hover{background-color:#e0e0e0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button-delete:hover{background-color:#fff0f0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-header{margin-left:33px;margin-bottom:15px;-webkit-user-select:text;user-select:text}.modal-icon{font-size:24px;position:absolute;margin-top:4px;margin-left:3px}.modal-content-body{margin-left:45px;margin-bottom:-5px;margin-top:1px;font-size:17px;min-width:400px}.modal-clear-button{border-radius:100%;background-color:transparent;border-color:transparent}.modal-clear-button:hover{background-color:#0000001f!important;transition:0!important;-webkit-transition-duration:0!important;transition-duration:0!important}\n"] }]
        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }], propDecorators: { dirblocks: [{
                type: ViewChild,
                args: ['dirblocks']
            }], primeSpace: [{
                type: ViewChild,
                args: ['primeSpace']
            }], allocUnit: [{
                type: ViewChild,
                args: ['allocUnit']
            }], secondSpace: [{
                type: ViewChild,
                args: ['secondSpace']
            }], recordLength: [{
                type: ViewChild,
                args: ['recordLength']
            }], recordFormat: [{
                type: ViewChild,
                args: ['recordFormat']
            }], dsorg: [{
                type: ViewChild,
                args: ['dsorg']
            }] } });
//# sourceMappingURL=data:application/json;base64,