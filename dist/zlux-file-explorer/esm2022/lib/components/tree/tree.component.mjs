import { Component, Input, Output, EventEmitter, ViewEncapsulation, ViewChild } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "primeng/tree";
import * as i3 from "primeng/contextmenu";
/**
 * [The tree component serves collapse/expansion of file/datasets]
 * @param  selector     [tree-root]
 * @param  templateUrl   [./tree.component.html]
 * @param  styleUrls     [./tree.component.css]
 * @param  providers     [None]
 * @return               [description]
 */
/**
 * [Input treeData supplies the tree structure]
 * [Input treeId supplies which tree is currently clicked]
  [Output  clickEvent supplies the folder click events]
 *
 * @return [description]
 */
export class TreeComponent {
    constructor() {
        this.clickEvent = new EventEmitter();
        this.dblClickEvent = new EventEmitter();
        this.rightClickEvent = new EventEmitter();
        this.panelRightClickEvent = new EventEmitter();
        this.lastClickedNodeTimeout = 500; // < 500 ms becomes a double click
        this.lastClickedNodeName = null;
    }
    /**
     * [nodeSelect provides the child folder click event to the parent file/folder tree tab]
     * @param  _event [click event]
     * @return        [void]
     */
    nodeSelect(_event) {
        if (_event) {
            if (this.lastClickedNodeName == null || this.lastClickedNodeName != (_event.node.name || _event.node.data.name)) {
                this.lastClickedNodeName = _event.node.name || _event.node.data.name;
                this.clickEvent.emit(_event);
                setTimeout(() => (this.lastClickedNodeName = null), this.lastClickedNodeTimeout);
            }
            else {
                this.dblClickEvent.emit(_event);
            }
        }
    }
    nodeRightClickSelect(_event) {
        if (_event) {
            this.rightClickEvent.emit(_event);
            _event.originalEvent.stopPropagation();
        }
    }
    panelRightClickSelect(_event) {
        if (_event) {
            _event.preventDefault();
            this.panelRightClickEvent.emit(_event);
        }
    }
    ngAfterContentInit() {
        this.fileExplorerTree.nativeElement.addEventListener('contextmenu', this.panelRightClickSelect.bind(this));
    }
    unselectNode() {
        this.selectedNode = null;
    }
    ngOnDestroy() {
        this.fileExplorerTree.nativeElement.removeEventListener('contextmenu', this.panelRightClickSelect.bind(this));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.7", ngImport: i0, type: TreeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.0.7", type: TreeComponent, selector: "tree-root", inputs: { treeData: "treeData", treeId: "treeId", style: "style", treeStyle: "treeStyle" }, outputs: { clickEvent: "clickEvent", dblClickEvent: "dblClickEvent", rightClickEvent: "rightClickEvent", panelRightClickEvent: "panelRightClickEvent" }, providers: [], viewQueries: [{ propertyName: "fileExplorerTree", first: true, predicate: ["fileExplorerPTree"], descendants: true, static: true }], ngImport: i0, template: "\r\n<!-- \r\n  This program and the accompanying materials are\r\n  made available under the terms of the Eclipse Public License v2.0 which accompanies\r\n  this distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\r\n  \r\n  SPDX-License-Identifier: EPL-2.0\r\n  \r\n  Copyright Contributors to the Zowe Project.\r\n-->\r\n\r\n<div class=\"fileexplorer-tree-panel\" #fileExplorerPTree [ngStyle]=\"treeStyle\">\r\n  <!-- {{treeData | json}} -->\r\n  <!-- <p-tree\r\n    styleClass=\"rs-com-css-file-navigator\"\r\n    [value]=\"treeData\"\r\n    <!- - selectionMode=\"single\"\r\n    [(selection)]=\"selectedNode\"\r\n    (onNodeSelect)=\"nodeSelect($event)\"\r\n    (onNodeExpand)=\"nodeExpand($event)\" - ->\r\n  >\r\n  </p-tree> -->\r\n  <p-tree\r\n    class=\"fileexplorer-p-tree\"\r\n    [value]=\"treeData\" \r\n    [id]=\"treeId\"\r\n    selectionMode=\"single\"\r\n    [(selection)]=\"selectedNode\"\r\n    (onNodeSelect)=\"nodeSelect($event)\"\r\n    (onNodeContextMenuSelect)=\"nodeRightClickSelect($event)\"\r\n    [ngStyle]=\"treeStyle\"\r\n    [contextMenu]=\"dummy\"\r\n    emptyMessage=\"\"\r\n  >\r\n  <!-- add [filter]=\"true\" with latest prime version (new feature March 2019) -->\r\n  </p-tree>\r\n  <!-- To properly use Prime's right click, we need a dummy context menu -->\r\n  <p-contextMenu #dummy></p-contextMenu>\r\n\r\n  <!-- <p-treeTable [value]=\"fileFolders\">\r\n      <p-column field=\"name\" header=\"Name\"></p-column>\r\n      <p-column field=\"type\" header=\"Type\"></p-column>\r\n  </p-treeTable> -->\r\n  <!-- <h1>{{treeData}}</h1> -->\r\n</div>\r\n\r\n<!-- \r\n  This program and the accompanying materials are\r\n  made available under the terms of the Eclipse Public License v2.0 which accompanies\r\n  this distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\r\n  \r\n  SPDX-License-Identifier: EPL-2.0\r\n  \r\n  Copyright Contributors to the Zowe Project.\r\n-->", styles: [".fileexplorer-tree-panel{flex:1 1 0px!important;background:transparent!important;height:100%!important;width:100%!important;margin-right:10px!important;color:inherit!important}.p-tree{width:100%!important;height:100%!important;min-width:300px!important;background:transparent!important;border:0px!important;border:none!important}.p-tree .p-tree-container{padding:15px 15px 9px!important;font-size:medium!important;color:inherit!important;overflow:auto!important;background-color:inherit!important;height:100%!important}.p-tree .p-widget .p-widget-content{background:transparent!important;border:0px!important;background-color:inherit!important}.p-treenode-label.p-state-highlight{background-color:#e0e0e0;border-radius:4px!important;padding-left:5px!important;padding-right:5px!important}.p-tree .p-treenode-label.p-state-highlight{color:#000}.p-treenode{width:fit-content!important;padding:1px!important;cursor:pointer!important}.p-treenode-content{display:table}.p-treenode-label{padding-left:3px;display:table-cell}.p-treenode-icon{padding-right:3px;display:table-cell}.p-tree-empty-message{color:#fff!important}.p-tree .p-treenode-children{margin:0!important;padding:0 0 0 1em!important}::-webkit-scrollbar-corner{background:#0000}*{list-style-type:none}.p-tree-wrapper{display:contents!important}.p-tree-toggler{display:none!important}\n"], dependencies: [{ kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "component", type: i2.Tree, selector: "p-tree", inputs: ["value", "selectionMode", "loadingMode", "selection", "style", "styleClass", "contextMenu", "layout", "draggableScope", "droppableScope", "draggableNodes", "droppableNodes", "metaKeySelection", "propagateSelectionUp", "propagateSelectionDown", "loading", "loadingIcon", "emptyMessage", "ariaLabel", "togglerAriaLabel", "ariaLabelledBy", "validateDrop", "filter", "filterBy", "filterMode", "filterPlaceholder", "filteredNodes", "filterLocale", "scrollHeight", "lazy", "virtualScroll", "virtualScrollItemSize", "virtualScrollOptions", "indentation", "_templateMap", "trackBy", "virtualNodeHeight"], outputs: ["selectionChange", "onNodeSelect", "onNodeUnselect", "onNodeExpand", "onNodeCollapse", "onNodeContextMenuSelect", "onNodeDrop", "onLazyLoad", "onScroll", "onScrollIndexChange", "onFilter"] }, { kind: "component", type: i3.ContextMenu, selector: "p-contextMenu", inputs: ["model", "triggerEvent", "target", "global", "style", "styleClass", "appendTo", "autoZIndex", "baseZIndex", "id", "ariaLabel", "ariaLabelledBy", "pressDelay"], outputs: ["onShow", "onHide"] }], encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.7", ngImport: i0, type: TreeComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tree-root', encapsulation: ViewEncapsulation.None, providers: [], template: "\r\n<!-- \r\n  This program and the accompanying materials are\r\n  made available under the terms of the Eclipse Public License v2.0 which accompanies\r\n  this distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\r\n  \r\n  SPDX-License-Identifier: EPL-2.0\r\n  \r\n  Copyright Contributors to the Zowe Project.\r\n-->\r\n\r\n<div class=\"fileexplorer-tree-panel\" #fileExplorerPTree [ngStyle]=\"treeStyle\">\r\n  <!-- {{treeData | json}} -->\r\n  <!-- <p-tree\r\n    styleClass=\"rs-com-css-file-navigator\"\r\n    [value]=\"treeData\"\r\n    <!- - selectionMode=\"single\"\r\n    [(selection)]=\"selectedNode\"\r\n    (onNodeSelect)=\"nodeSelect($event)\"\r\n    (onNodeExpand)=\"nodeExpand($event)\" - ->\r\n  >\r\n  </p-tree> -->\r\n  <p-tree\r\n    class=\"fileexplorer-p-tree\"\r\n    [value]=\"treeData\" \r\n    [id]=\"treeId\"\r\n    selectionMode=\"single\"\r\n    [(selection)]=\"selectedNode\"\r\n    (onNodeSelect)=\"nodeSelect($event)\"\r\n    (onNodeContextMenuSelect)=\"nodeRightClickSelect($event)\"\r\n    [ngStyle]=\"treeStyle\"\r\n    [contextMenu]=\"dummy\"\r\n    emptyMessage=\"\"\r\n  >\r\n  <!-- add [filter]=\"true\" with latest prime version (new feature March 2019) -->\r\n  </p-tree>\r\n  <!-- To properly use Prime's right click, we need a dummy context menu -->\r\n  <p-contextMenu #dummy></p-contextMenu>\r\n\r\n  <!-- <p-treeTable [value]=\"fileFolders\">\r\n      <p-column field=\"name\" header=\"Name\"></p-column>\r\n      <p-column field=\"type\" header=\"Type\"></p-column>\r\n  </p-treeTable> -->\r\n  <!-- <h1>{{treeData}}</h1> -->\r\n</div>\r\n\r\n<!-- \r\n  This program and the accompanying materials are\r\n  made available under the terms of the Eclipse Public License v2.0 which accompanies\r\n  this distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\r\n  \r\n  SPDX-License-Identifier: EPL-2.0\r\n  \r\n  Copyright Contributors to the Zowe Project.\r\n-->", styles: [".fileexplorer-tree-panel{flex:1 1 0px!important;background:transparent!important;height:100%!important;width:100%!important;margin-right:10px!important;color:inherit!important}.p-tree{width:100%!important;height:100%!important;min-width:300px!important;background:transparent!important;border:0px!important;border:none!important}.p-tree .p-tree-container{padding:15px 15px 9px!important;font-size:medium!important;color:inherit!important;overflow:auto!important;background-color:inherit!important;height:100%!important}.p-tree .p-widget .p-widget-content{background:transparent!important;border:0px!important;background-color:inherit!important}.p-treenode-label.p-state-highlight{background-color:#e0e0e0;border-radius:4px!important;padding-left:5px!important;padding-right:5px!important}.p-tree .p-treenode-label.p-state-highlight{color:#000}.p-treenode{width:fit-content!important;padding:1px!important;cursor:pointer!important}.p-treenode-content{display:table}.p-treenode-label{padding-left:3px;display:table-cell}.p-treenode-icon{padding-right:3px;display:table-cell}.p-tree-empty-message{color:#fff!important}.p-tree .p-treenode-children{margin:0!important;padding:0 0 0 1em!important}::-webkit-scrollbar-corner{background:#0000}*{list-style-type:none}.p-tree-wrapper{display:contents!important}.p-tree-toggler{display:none!important}\n"] }]
        }], ctorParameters: () => [], propDecorators: { treeData: [{
                type: Input
            }], treeId: [{
                type: Input
            }], style: [{
                type: Input
            }], treeStyle: [{
                type: Input
            }], clickEvent: [{
                type: Output
            }], dblClickEvent: [{
                type: Output
            }], rightClickEvent: [{
                type: Output
            }], panelRightClickEvent: [{
                type: Output
            }], fileExplorerTree: [{
                type: ViewChild,
                args: ['fileExplorerPTree', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,