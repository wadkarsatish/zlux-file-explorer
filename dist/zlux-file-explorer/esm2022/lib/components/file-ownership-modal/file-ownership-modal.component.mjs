/*
  This program and the accompanying materials are
  made available under the terms of the Eclipse Public License v2.0 which accompanies
  this distribution, and is available at https://www.eclipse.org/legal/epl-v20.html
  
  SPDX-License-Identifier: EPL-2.0
  
  Copyright Contributors to the Zowe Project.
*/
import { Component, Inject } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';
import { throwError } from 'rxjs';
import { defaultSnackbarOptions } from '../../shared/snackbar-options';
import { finalize } from "rxjs/operators";
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "@angular/common/http";
import * as i3 from "@angular/material/snack-bar";
import * as i4 from "@angular/forms";
import * as i5 from "@angular/material/form-field";
import * as i6 from "@angular/material/icon";
import * as i7 from "@angular/material/input";
import * as i8 from "@angular/material/list";
import * as i9 from "@angular/material/button";
import * as i10 from "zlux-widgets";
import * as i11 from "@angular/material/slide-toggle";
export class FileOwnershipModal {
    constructor(data, dialogRef, http, snackBar) {
        this.dialogRef = dialogRef;
        this.http = http;
        this.snackBar = snackBar;
        this.name = '';
        this.path = '';
        this.mode = 0;
        this.modeSym = '';
        this.icon = '';
        this.owner = '';
        this.group = '';
        this.isDirectory = false;
        this.recursive = false;
        this.node = null;
        this.folderName = '';
        this.folderPath = '';
        this.node = data.event;
        this.name = this.node.name;
        this.path = this.node.path;
        this.mode = this.node.mode;
        this.owner = this.node.owner;
        this.group = this.node.group;
        this.isDirectory = this.node.directory;
        if (this.node.icon) {
            this.icon = this.node.icon;
        }
        else if (this.node.collapsedIcon) {
            this.icon = this.node.collapsedIcon;
        }
        this.formatPermissions();
    }
    formatPermissions() {
        let modeString = String(this.mode);
        if (modeString.length == 2) { // In case the mode is not properly formatted as "000" instead of "0", "20" etc
            modeString = "0" + modeString;
        }
        else if (modeString.length == 1) {
            modeString = "00" + modeString;
        }
        let modeStringSym = "";
        for (let i = 0; i < 3; i++) {
            let value = modeString.charAt(i);
            switch (value) {
                case "0":
                    modeStringSym += "---";
                    break;
                case "1":
                    modeStringSym += "--x";
                    break;
                case "2":
                    modeStringSym += "-w-";
                    break;
                case "3":
                    modeStringSym += "-wx";
                    break;
                case "4":
                    modeStringSym += "r--";
                    break;
                case "5":
                    modeStringSym += "r-x";
                    break;
                case "6":
                    modeStringSym += "rw-";
                    break;
                case "7":
                    modeStringSym += "rwx";
                    break;
            }
        }
        this.modeSym = modeStringSym;
    }
    saveOwnerInfo() {
        let url = ZoweZLUX.uriBroker.unixFileUri('chown', this.path, undefined, undefined, undefined, false, undefined, undefined, undefined, undefined, this.recursive, this.owner, this.group);
        this.http.post(url, null, { observe: 'response' }).pipe(finalize(() => this.closeDialog())).subscribe((res) => {
            if (res.status == 200) {
                this.snackBar.open(this.path + ' has been successfully changed to Owner: ' + this.owner + " Group: " + this.group + ".", 'Dismiss', defaultSnackbarOptions);
                this.node.owner = this.owner;
                this.node.group = this.group;
            }
            else {
                this.snackBar.open(res.status + " - A problem was encountered: " + res.statusText, 'Dismiss', defaultSnackbarOptions);
            }
        }, err => {
            this.handleErrorObservable(err);
        });
    }
    closeDialog() {
        const needUpdate = this.isDirectory;
        this.dialogRef.close(needUpdate);
    }
    handleErrorObservable(error) {
        console.error(error.message || error);
        this.snackBar.open(error.status + " - A problem was encountered: " + error._body, 'Dismiss', defaultSnackbarOptions);
        return throwError(() => error.message || error);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.7", ngImport: i0, type: FileOwnershipModal, deps: [{ token: MAT_DIALOG_DATA }, { token: i1.MatDialogRef }, { token: i2.HttpClient }, { token: i3.MatSnackBar }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.0.7", type: FileOwnershipModal, selector: "file-ownership-modal", ngImport: i0, template: "\n<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->\n<zlux-tab-trap></zlux-tab-trap>\n<!-- FA Icon is determined by class name, so we hardcode the style here -->\n<i class=\"{{icon}}\" style=\"font-size:24px; position: absolute; margin-top: 4px; margin-left: 3px;\"></i>\n<button mat-dialog-close class=\"close-dialog-btn\"><i class=\"fa fa-close\"></i></button>\n<h2 mat-dialog-title class=\"modal-mat-header\">{{name}} - Change Owners</h2>\n\n\n<!-- Possible future filter code -->\n<!-- <mat-form-field>\n<input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n</mat-form-field> -->\n\n<div class=\"modal-row\">\n  <div class=\"modal-column-ownership\" style=\"width: 30%;\">\n    <mat-list-item>\n      <div class=\"selectable-text\">Mode:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{mode}} ({{modeSym}})</div>\n    </mat-list-item>\n  </div>\n</div>\n\n<div class=\"modal-row\">\n  <div class=\"modal-column-ownership\">\n    <mat-list-item>\n      Owner:\n      <mat-form-field style=\"margin-left: 15px;\">\n        <input id=\"owner-input\" name=\"name\" matInput type=\"text\"\n          [ngModel]=\"owner\" (ngModelChange)=\"owner=$event.toUpperCase()\">\n          @if (folderName) {\n            <button class=\"modal-clear-button\" mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"folderName=''\">\n              <mat-icon class=\"create-folder-clear-icon\">close</mat-icon>\n            </button>\n          }\n        </mat-form-field>\n      </mat-list-item>\n    </div>\n  </div>\n\n  <div class=\"modal-row\">\n    <div class=\"modal-column-ownership\">\n      <mat-list-item>\n        Group:\n        <mat-form-field style=\"margin-left: 15px;\">\n          <input id=\"group-input\" matInput type=\"text\"\n            [ngModel]=\"group\" (ngModelChange)=\"group=$event.toUpperCase()\">\n            @if (folderPath) {\n              <button class=\"modal-clear-button\" mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"folderPath=''\">\n                <mat-icon class=\"create-folder-clear-icon\">close</mat-icon>\n              </button>\n            }\n          </mat-form-field>\n        </mat-list-item>\n      </div>\n    </div>\n\n    @if (isDirectory) {\n      <div class=\"modal-row\">\n        <div class=\"modal-column-ownership\" style=\"width: 30%;\">\n          <mat-list-item>\n            <mat-slide-toggle color=\"primary\" class=\"selectable-text\" [(ngModel)]=\"recursive\"></mat-slide-toggle>\n          </mat-list-item>\n        </div>\n        <div class=\"modal-column\">\n          <mat-list-item>\n            <div class=\"selectable-text\">Recursive?</div>\n          </mat-list-item>\n        </div>\n      </div>\n    }\n\n    <mat-dialog-actions>\n      <button mat-button class=\"modal-mat-button\" (click)=\"saveOwnerInfo()\">Save</button>\n      <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\n    </mat-dialog-actions>\n\n    <!--\n    This program and the accompanying materials are\n    made available under the terms of the Eclipse Public License v2.0 which accompanies\n    this distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\n    SPDX-License-Identifier: EPL-2.0\n\n    Copyright Contributors to the Zowe Project.\n    -->\n", styles: [".modal-column-ownership{float:left;width:100%}\n", "mat-dialog-actions{justify-content:flex-end}.close-dialog-btn{float:right;border:none;background:transparent;outline:none}.modal-column{float:left;width:50%}.modal-column-full-width{width:100%}.modal-row:after{content:\"\";display:table;clear:both}.modal-row{padding-top:15px;font-size:medium}.modal-title{vertical-align:middle;float:left}.selectable-text{-moz-user-select:text!important;-khtml-user-select:text!important;-webkit-user-select:text!important;-ms-user-select:text!important;user-select:text!important;min-width:200px}.modal-mat-button{padding:6px;width:85px;border-radius:3px;border:solid;color:#3f51b5;border-width:1.75px;box-shadow:transparent;background-color:transparent;margin-top:25px;margin-right:-10px;font-family:Roboto,Helvetica Neue,sans-serif;font-size:14px;font-weight:500}.modal-mat-button.cancel{color:#242424;border-color:transparent;margin-right:5px}.modal-mat-button.cancel:hover{background-color:#e0e0e0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button:hover{background-color:#2c4cff1f;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button-delete{padding:6px;width:85px;border-radius:3px;border:solid;color:#e64242;border-width:1.75px;box-shadow:transparent;background-color:transparent;margin-top:25px;margin-right:-10px;font-family:Roboto,Helvetica Neue,sans-serif;font-size:14px;font-weight:500}.modal-mat-button-delete.cancel{border-color:transparent;color:#242424;margin-top:25px;margin-right:5px}.modal-mat-button-delete.cancel:hover{background-color:#e0e0e0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button-delete:hover{background-color:#fff0f0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-header{margin-left:33px;margin-bottom:15px;-webkit-user-select:text;user-select:text}.modal-icon{font-size:24px;position:absolute;margin-top:4px;margin-left:3px}.modal-content-body{margin-left:45px;margin-bottom:-5px;margin-top:1px;font-size:17px;min-width:400px}.modal-clear-button{border-radius:100%;background-color:transparent;border-color:transparent}.modal-clear-button:hover{background-color:#0000001f!important;transition:0!important;-webkit-transition-duration:0!important;transition-duration:0!important}\n"], dependencies: [{ kind: "directive", type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i1.MatDialogClose, selector: "[mat-dialog-close], [matDialogClose]", inputs: ["aria-label", "type", "mat-dialog-close", "matDialogClose"], exportAs: ["matDialogClose"] }, { kind: "directive", type: i1.MatDialogTitle, selector: "[mat-dialog-title], [matDialogTitle]", inputs: ["id"], exportAs: ["matDialogTitle"] }, { kind: "directive", type: i1.MatDialogActions, selector: "[mat-dialog-actions], mat-dialog-actions, [matDialogActions]", inputs: ["align"] }, { kind: "component", type: i5.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i5.MatSuffix, selector: "[matSuffix], [matIconSuffix], [matTextSuffix]", inputs: ["matTextSuffix"] }, { kind: "component", type: i6.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: i7.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "component", type: i8.MatListItem, selector: "mat-list-item, a[mat-list-item], button[mat-list-item]", inputs: ["activated"], exportAs: ["matListItem"] }, { kind: "component", type: i9.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }, { kind: "component", type: i9.MatIconButton, selector: "button[mat-icon-button]", exportAs: ["matButton"] }, { kind: "component", type: i10.ZluxTabbingComponent, selector: "zlux-tab-trap", inputs: ["hiddenIds", "hiddenPos"] }, { kind: "component", type: i11.MatSlideToggle, selector: "mat-slide-toggle", inputs: ["name", "id", "labelPosition", "aria-label", "aria-labelledby", "aria-describedby", "required", "color", "disabled", "disableRipple", "tabIndex", "checked", "hideIcon"], outputs: ["change", "toggleChange"], exportAs: ["matSlideToggle"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.7", ngImport: i0, type: FileOwnershipModal, decorators: [{
            type: Component,
            args: [{ selector: 'file-ownership-modal', template: "\n<!--\nThis program and the accompanying materials are\nmade available under the terms of the Eclipse Public License v2.0 which accompanies\nthis distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\nSPDX-License-Identifier: EPL-2.0\n\nCopyright Contributors to the Zowe Project.\n-->\n<zlux-tab-trap></zlux-tab-trap>\n<!-- FA Icon is determined by class name, so we hardcode the style here -->\n<i class=\"{{icon}}\" style=\"font-size:24px; position: absolute; margin-top: 4px; margin-left: 3px;\"></i>\n<button mat-dialog-close class=\"close-dialog-btn\"><i class=\"fa fa-close\"></i></button>\n<h2 mat-dialog-title class=\"modal-mat-header\">{{name}} - Change Owners</h2>\n\n\n<!-- Possible future filter code -->\n<!-- <mat-form-field>\n<input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n</mat-form-field> -->\n\n<div class=\"modal-row\">\n  <div class=\"modal-column-ownership\" style=\"width: 30%;\">\n    <mat-list-item>\n      <div class=\"selectable-text\">Mode:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{mode}} ({{modeSym}})</div>\n    </mat-list-item>\n  </div>\n</div>\n\n<div class=\"modal-row\">\n  <div class=\"modal-column-ownership\">\n    <mat-list-item>\n      Owner:\n      <mat-form-field style=\"margin-left: 15px;\">\n        <input id=\"owner-input\" name=\"name\" matInput type=\"text\"\n          [ngModel]=\"owner\" (ngModelChange)=\"owner=$event.toUpperCase()\">\n          @if (folderName) {\n            <button class=\"modal-clear-button\" mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"folderName=''\">\n              <mat-icon class=\"create-folder-clear-icon\">close</mat-icon>\n            </button>\n          }\n        </mat-form-field>\n      </mat-list-item>\n    </div>\n  </div>\n\n  <div class=\"modal-row\">\n    <div class=\"modal-column-ownership\">\n      <mat-list-item>\n        Group:\n        <mat-form-field style=\"margin-left: 15px;\">\n          <input id=\"group-input\" matInput type=\"text\"\n            [ngModel]=\"group\" (ngModelChange)=\"group=$event.toUpperCase()\">\n            @if (folderPath) {\n              <button class=\"modal-clear-button\" mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"folderPath=''\">\n                <mat-icon class=\"create-folder-clear-icon\">close</mat-icon>\n              </button>\n            }\n          </mat-form-field>\n        </mat-list-item>\n      </div>\n    </div>\n\n    @if (isDirectory) {\n      <div class=\"modal-row\">\n        <div class=\"modal-column-ownership\" style=\"width: 30%;\">\n          <mat-list-item>\n            <mat-slide-toggle color=\"primary\" class=\"selectable-text\" [(ngModel)]=\"recursive\"></mat-slide-toggle>\n          </mat-list-item>\n        </div>\n        <div class=\"modal-column\">\n          <mat-list-item>\n            <div class=\"selectable-text\">Recursive?</div>\n          </mat-list-item>\n        </div>\n      </div>\n    }\n\n    <mat-dialog-actions>\n      <button mat-button class=\"modal-mat-button\" (click)=\"saveOwnerInfo()\">Save</button>\n      <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\n    </mat-dialog-actions>\n\n    <!--\n    This program and the accompanying materials are\n    made available under the terms of the Eclipse Public License v2.0 which accompanies\n    this distribution, and is available at https://www.eclipse.org/legal/epl-v20.html\n\n    SPDX-License-Identifier: EPL-2.0\n\n    Copyright Contributors to the Zowe Project.\n    -->\n", styles: [".modal-column-ownership{float:left;width:100%}\n", "mat-dialog-actions{justify-content:flex-end}.close-dialog-btn{float:right;border:none;background:transparent;outline:none}.modal-column{float:left;width:50%}.modal-column-full-width{width:100%}.modal-row:after{content:\"\";display:table;clear:both}.modal-row{padding-top:15px;font-size:medium}.modal-title{vertical-align:middle;float:left}.selectable-text{-moz-user-select:text!important;-khtml-user-select:text!important;-webkit-user-select:text!important;-ms-user-select:text!important;user-select:text!important;min-width:200px}.modal-mat-button{padding:6px;width:85px;border-radius:3px;border:solid;color:#3f51b5;border-width:1.75px;box-shadow:transparent;background-color:transparent;margin-top:25px;margin-right:-10px;font-family:Roboto,Helvetica Neue,sans-serif;font-size:14px;font-weight:500}.modal-mat-button.cancel{color:#242424;border-color:transparent;margin-right:5px}.modal-mat-button.cancel:hover{background-color:#e0e0e0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button:hover{background-color:#2c4cff1f;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button-delete{padding:6px;width:85px;border-radius:3px;border:solid;color:#e64242;border-width:1.75px;box-shadow:transparent;background-color:transparent;margin-top:25px;margin-right:-10px;font-family:Roboto,Helvetica Neue,sans-serif;font-size:14px;font-weight:500}.modal-mat-button-delete.cancel{border-color:transparent;color:#242424;margin-top:25px;margin-right:5px}.modal-mat-button-delete.cancel:hover{background-color:#e0e0e0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-button-delete:hover{background-color:#fff0f0;-webkit-transition-duration:.2s;transition-duration:.2s}.modal-mat-header{margin-left:33px;margin-bottom:15px;-webkit-user-select:text;user-select:text}.modal-icon{font-size:24px;position:absolute;margin-top:4px;margin-left:3px}.modal-content-body{margin-left:45px;margin-bottom:-5px;margin-top:1px;font-size:17px;min-width:400px}.modal-clear-button{border-radius:100%;background-color:transparent;border-color:transparent}.modal-clear-button:hover{background-color:#0000001f!important;transition:0!important;-webkit-transition-duration:0!important;transition-duration:0!important}\n"] }]
        }], ctorParameters: () => [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }, { type: i1.MatDialogRef }, { type: i2.HttpClient }, { type: i3.MatSnackBar }] });
//# sourceMappingURL=data:application/json;base64,