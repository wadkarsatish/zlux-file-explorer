import { ElementRef } from '@angular/core';
import { MatSelect } from '@angular/material/select';
import { CustomErrorStateMatcher } from '../../shared/error-state-matcher';
import * as i0 from "@angular/core";
export declare class CreateDatasetModal {
    private el;
    properties: any;
    numericPattern: string;
    numericPatternExZero: string;
    datasetNamePattern: string;
    alphaNumericPattern: string;
    templateOptions: string[];
    allocationUnitOptions: string[];
    datasetNameTypeOptions: string[];
    recordFormatOptions: string[];
    organizationOptions: string[];
    recordUnitOptions: string[];
    matcher: CustomErrorStateMatcher;
    isDirBlockValid: boolean;
    dirBlockError: string;
    dirBlockTouched: boolean;
    isPrimeSpaceValid: boolean;
    isSecondSpaceValid: boolean;
    isRecLengthValid: boolean;
    isBlockSizeValid: boolean;
    primarySpaceError: string;
    secondarySpaceError: string;
    recordLengthError: string;
    blockSizeError: string;
    isRecordFormatValid: boolean;
    recordFormatErrorMessage: string;
    blockSizeTouched: boolean;
    isAllocUnitValid: boolean;
    allocUnitErrorMessage: string;
    isRecFormatTouched: boolean;
    dirblocks: ElementRef;
    primeSpace: ElementRef;
    allocUnit: MatSelect;
    secondSpace: ElementRef;
    recordLength: ElementRef;
    recordFormat: MatSelect;
    dsorg: ElementRef;
    constructor(el: ElementRef, data: any);
    onTemplateChange(value: string): void;
    setDatasetNameTypeProperties(datasetNameType: string): void;
    setTemplateProperties(template: string): void;
    onDirBlockChange(value: any): void;
    checkForValidDirBlockCombination(): void;
    checkForValidRecordFormatCombination(): void;
    checkForValidAllocUnitCombination(): void;
    onPrimeSpaceChange(primarySpace: any): void;
    onSecondSpaceChange(SecondarySpace: any): void;
    onRecLengthChange(recordLength: any): void;
    onBlockSizeChange(blockSize: any): void;
    onRecordFormatChange(value: any): void;
    onAllocUnitChange(value: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CreateDatasetModal, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CreateDatasetModal, "create-dataset-modal", never, {}, {}, never, never, false, never>;
}
